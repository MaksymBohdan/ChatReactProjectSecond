1
00:00:00,480 --> 00:00:05,940
We've sold all the dependencies for a project now it can clear out the logging in our terminal and remove

2
00:00:05,970 --> 00:00:08,630
any get files we might have brought down on me.

3
00:00:08,850 --> 00:00:14,980
Clone this repo with our dash are Afkham get this or move any get files in our project.

4
00:00:15,060 --> 00:00:18,200
We don't want to use someone else's version control.

5
00:00:18,390 --> 00:00:20,320
But if you want to initialize.

6
00:00:20,340 --> 00:00:28,960
You can just try to get a set up file tracking then all run NPM start to start up our development server

7
00:00:29,080 --> 00:00:36,610
that should start up at localhost 3000 and show the home page the styles for page up create react at

8
00:00:36,610 --> 00:00:43,860
so used create react to bootstrap of the starting project files and we'll go into the source folder

9
00:00:44,490 --> 00:00:52,520
into APTA Jass and remove all the markup within the div tags or place that with the text of app or move

10
00:00:52,520 --> 00:00:57,420
the class name of app and remove the logo import up at the top and delete the logo.

11
00:00:57,440 --> 00:01:00,380
SVGA fall within the source folder as well.

12
00:01:01,840 --> 00:01:07,780
You want to remove any initial style so go to after CSSA clear out all the style rules there.

13
00:01:09,760 --> 00:01:14,740
We're going to create a new folder in the source folder for all of our components so this will be called

14
00:01:14,740 --> 00:01:15,430
components.

15
00:01:15,610 --> 00:01:23,460
While dragon ABTA Jason APTA CSSA into this newly created folder then since we change the path of app

16
00:01:24,340 --> 00:01:31,810
going to within index that has changed Yep path to slash component's slash app save all of our files

17
00:01:31,870 --> 00:01:37,320
and we should see on the home page just the text of app in the top left hand corner.

18
00:01:37,840 --> 00:01:40,650
Now set up some routing per application.

19
00:01:40,690 --> 00:01:49,460
Import a few things from the package re-act Rotterdam will first grab browser router and rename it as

20
00:01:49,470 --> 00:01:55,710
a router as well as the switch and route components for our individual routes.

21
00:01:55,790 --> 00:01:59,470
We'll house all of our routes within a stateless functional component called route

22
00:02:02,660 --> 00:02:11,510
all of our individual routes will be within a switch component that's within the router component.

23
00:02:11,560 --> 00:02:13,290
Our first round will be the route route.

24
00:02:13,750 --> 00:02:20,060
We'll give it a path of just forward slash and connect it to the component at.

25
00:02:20,200 --> 00:02:26,350
Now we want to render route instead of app since app is now a route.

26
00:02:26,470 --> 00:02:35,050
We'll save that and we should still see the app text on our home page going to create a new folder within

27
00:02:35,050 --> 00:02:44,330
our components folder called Auth. going to add the files and the components log in and register to

28
00:02:44,350 --> 00:02:45,380
that folder.

29
00:02:46,930 --> 00:02:50,980
And then register will import re-act up at the top.

30
00:02:51,050 --> 00:02:58,370
This will be a staple component will say class register sends react a component will have its necessary

31
00:02:58,430 --> 00:03:01,200
render function as well as the return.

32
00:03:01,200 --> 00:03:08,280
For now we'll just return a div with the text of register and export at the bottom with export before

33
00:03:08,330 --> 00:03:18,750
the register component grab all the markup that we just wrote and paste it within log in will change

34
00:03:18,750 --> 00:03:28,050
the class the log in the text the log in and the export to the log and component then we'll create routes

35
00:03:28,740 --> 00:03:32,670
for both of these new components within our index file.

36
00:03:34,500 --> 00:03:41,590
Create a route with the path of log in that will reference the log in component and a path register

37
00:03:41,900 --> 00:03:49,030
with the component of register and Obering and both of those components into index exit Jaspal import

38
00:03:49,030 --> 00:03:51,620
log in from components off.

39
00:03:51,990 --> 00:04:02,070
Log in can copy that and change the path to slash register at the end and the name to register.

40
00:04:02,440 --> 00:04:08,050
And we want to add the exact keyword on the route path to make sure that we're not matching multiple

41
00:04:08,050 --> 00:04:14,780
components which is what the switch component will do if we don't have that exact keyword there.

42
00:04:14,980 --> 00:04:19,840
Then we can within our browser go to log in and the register routes.

