1
00:00:00,630 --> 00:00:07,140
To upload an image to firebase and to post that image as a message we'll head back to our upload file

2
00:00:07,140 --> 00:00:14,220
function within message form or we'll first create a path to upload variable which reference the channel

3
00:00:14,220 --> 00:00:24,710
ID within state and or create a ref variable which will reference our messages ref from prop's then

4
00:00:24,860 --> 00:00:31,360
will create this file path variable which will use template literals in the beginning and the path will

5
00:00:31,360 --> 00:00:34,280
be a chat slash public.

6
00:00:34,290 --> 00:00:48,510
Then after the next slash we use a function called do you ID before you ID Sastry before to create a

7
00:00:48,510 --> 00:00:50,180
random string.

8
00:00:51,450 --> 00:00:57,380
So we'll interpret that and call you you IDB for and end the path with that jpeg.

9
00:01:00,120 --> 00:01:02,180
Then we're going to set state.

10
00:01:02,880 --> 00:01:12,330
We want to set the upload state to the string uploading as our files being uploaded as well as the upload

11
00:01:12,330 --> 00:01:16,700
task property as first create.

12
00:01:16,700 --> 00:01:24,900
Both of these properties within state upload state will be set to an empty string initially an upload

13
00:01:24,900 --> 00:01:28,680
task will be set to No.

14
00:01:29,140 --> 00:01:34,240
We'll also have a storage rack and this is the way that we'll reach out to firebase in order to store

15
00:01:34,270 --> 00:01:35,530
image.

16
00:01:35,610 --> 00:01:37,230
This all references sors module.

17
00:01:37,270 --> 00:01:39,820
And we'll just have an empty wrapper for now.

18
00:01:43,300 --> 00:01:47,780
So for upload task we're going to reference our store for

19
00:01:50,710 --> 00:01:52,470
and put a new child onto it.

20
00:01:54,440 --> 00:02:01,160
And the child will be the file path variable that we created and we're going to put both the file and

21
00:02:01,200 --> 00:02:06,220
metadata that we're getting within the function on that child.

22
00:02:06,220 --> 00:02:08,720
So this is what's going to be stored and upload task.

23
00:02:08,940 --> 00:02:21,970
And now within the callback once our state is set for upload task we can listen for state changed and

24
00:02:21,970 --> 00:02:25,270
this will have a snap callback.

25
00:02:25,430 --> 00:02:32,860
And in this callback will create this percent uploaded variable which will store the number of bytes

26
00:02:32,860 --> 00:02:39,490
transferred in our upload with snapshot bytes transferred divided by the number of total bytes

27
00:02:43,260 --> 00:02:51,150
and then to get the percent of the file has been uploaded will multiply bytes transferred divided by

28
00:02:51,150 --> 00:03:01,630
total bytes by 100 or around that amount with Matha around to get an integer and then offset state so

29
00:03:01,630 --> 00:03:05,730
we can track how much of the file has been uploaded over time

30
00:03:08,960 --> 00:03:18,990
or create per cent uploaded within state and so that initially does 0.

31
00:03:19,000 --> 00:03:26,110
Now after listening for state change we're going to include an error callback catching errors.

32
00:03:26,240 --> 00:03:28,280
We just want to include a con. that air

33
00:03:31,760 --> 00:03:33,420
said our errors array.

34
00:03:33,580 --> 00:03:43,450
States have it include this potential error message with concat and if there's an error we'll set up

35
00:03:43,560 --> 00:03:52,840
state to air and upload task to no.

36
00:03:53,000 --> 00:04:03,680
Now after this state changed include another callback which will reference a snapshot property on upload

37
00:04:03,680 --> 00:04:12,500
task than RF property and will execute this get download your L method which is going to be a promise

38
00:04:12,520 --> 00:04:20,000
that's going to allow us to get the URL of the file that's been uploaded by firebase that we uploaded

39
00:04:20,000 --> 00:04:29,060
to our base storage and we want to pass this download your L are all of that file to the send file message

40
00:04:29,060 --> 00:04:33,260
function as well as ref and path to upload.

41
00:04:33,590 --> 00:04:36,810
And once again since this is a promise we'll catch any errors

42
00:04:39,670 --> 00:04:44,070
American paste and all the error handling that we used for our other error callback

43
00:04:47,000 --> 00:04:54,120
now we need to create this send a message function will take the fire while your El read variable empath

44
00:04:54,150 --> 00:04:57,740
to upload it on the.

45
00:04:58,300 --> 00:05:05,990
We'll set a child path to upload or push that on to the.

46
00:05:06,050 --> 00:05:15,880
And then also the result of the function create message which will take the file you are el.

47
00:05:15,900 --> 00:05:22,930
So now we need to in order to post our message create the message with the value that's been returned

48
00:05:23,650 --> 00:05:29,760
with create message will first delete the content property and and file your will as a parameter with

49
00:05:29,770 --> 00:05:34,210
the default value of no.

50
00:05:34,220 --> 00:05:38,710
So now will have messages both with content and with image properties.

51
00:05:38,750 --> 00:05:45,760
So we need to determine which is which by setting a conditional where if there is a value or a pass

52
00:05:45,770 --> 00:05:52,090
to create message we're going to set an image property on our message object called to file your bill

53
00:05:52,160 --> 00:05:53,130
which we passed in.

54
00:05:53,360 --> 00:05:58,870
Otherwise we'll have a content property which will be equal to the start state top message

55
00:06:03,500 --> 00:06:05,760
in our back and send a message.

56
00:06:05,800 --> 00:06:06,470
Could again

57
00:06:09,270 --> 00:06:15,200
we want to once again set state or set up a state to dun

58
00:06:18,110 --> 00:06:26,420
after we create and post our message and our captioning errors canceled or air

59
00:06:30,920 --> 00:06:34,000
or add this air object to your heirs and state

60
00:06:38,010 --> 00:06:40,020
funds for creating messages with images on them.

61
00:06:40,020 --> 00:06:41,890
We need to display those images.

62
00:06:42,800 --> 00:06:49,010
Within our message component we'll create an image function above message which will take a message

63
00:06:49,580 --> 00:06:52,790
in return true if it contains an image property

64
00:06:55,520 --> 00:07:01,730
right before the closing tag of comment that Conca will execute is image passen the message.

65
00:07:01,730 --> 00:07:09,810
And if the function returns it to be an image message will show an image component with the source to

66
00:07:09,830 --> 00:07:19,710
message that image was that the class name as well to message underscore underscore image otherwise.

67
00:07:21,030 --> 00:07:24,360
If it's a message that contains a content property

68
00:07:28,290 --> 00:07:35,570
we'll use our comment that text component and I'll just display the text with message content.

69
00:07:35,970 --> 00:07:43,580
So then is image it's going to take the message it's going to check to see if it has a property with

70
00:07:43,590 --> 00:07:51,220
the name of image and doesn't have a property with the name of content.

71
00:07:56,610 --> 00:08:06,290
And now will create our message underscore underscore image class back within Appalachia SS and this

72
00:08:06,290 --> 00:08:11,810
classes just to give the image that we're displaying a little bit of space around it on every side with

73
00:08:11,810 --> 00:08:14,060
padding set to 1 am.

74
00:08:14,150 --> 00:08:19,910
We'll save that and we'll make sure finally that we're bringing in the image component from semantic

75
00:08:19,920 --> 00:08:23,480
UI.

76
00:08:23,670 --> 00:08:27,410
We'll test this out by selecting an image file.

77
00:08:31,100 --> 00:08:34,220
And when we hit send it should be uploaded to firebase storage.

78
00:08:34,230 --> 00:08:39,290
We should see our new image message in the channel that we're currently in.

79
00:08:39,320 --> 00:08:46,760
So if we head back to our database we should see a new message in our messages collection the property

80
00:08:46,760 --> 00:08:47,530
of image.

81
00:08:47,610 --> 00:08:49,670
So to the world firebase storage

82
00:08:52,720 --> 00:08:56,400
we had to our storage tab.

83
00:08:56,720 --> 00:09:03,750
You can see this new chat folder you can click on it then there will be a public folder and within that

84
00:09:04,320 --> 00:09:09,240
we should see our uploaded image which was displayed as a message.

85
00:09:09,360 --> 00:09:14,650
We can see the name size the file type as well as when it was created.

