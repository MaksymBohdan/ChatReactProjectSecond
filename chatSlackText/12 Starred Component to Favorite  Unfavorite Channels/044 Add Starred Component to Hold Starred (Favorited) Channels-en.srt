1
00:00:00,550 --> 00:00:07,350
Now take a look at Starring public channels that we like and putting them within a star component just

2
00:00:07,350 --> 00:00:15,110
above our channels component will first create this start component within our side panel.

3
00:00:15,170 --> 00:00:24,080
Go to side panel file and write it on an ether user panel will create a custom stored component will

4
00:00:24,080 --> 00:00:27,110
create a file for it on our side panel folder

5
00:00:30,010 --> 00:00:32,680
where we will import re-act up at the top.

6
00:00:32,740 --> 00:00:34,290
This will be a staple component.

7
00:00:34,370 --> 00:00:35,480
The class name of starred

8
00:00:38,980 --> 00:00:42,500
I have our render and return and we'll export it

9
00:00:47,400 --> 00:00:48,390
back inside panel.

10
00:00:48,390 --> 00:00:49,570
Make sure to import that

11
00:00:55,720 --> 00:00:58,770
then for the markup with an our started component.

12
00:00:58,800 --> 00:01:07,620
You can just go to channels and grab entire menu menu component so that will have a structure very similar

13
00:01:08,310 --> 00:01:09,090
to our channels

14
00:01:12,710 --> 00:01:22,850
no need to import all of the components that we're using from semantic UI on the menu and Icom will

15
00:01:22,850 --> 00:01:35,330
change the icon name to star and give it a text a start or remove the icon and we'll display the number

16
00:01:35,330 --> 00:01:43,850
of star channels the start started channels property more past our channels down to the splayed channels

17
00:01:43,850 --> 00:01:44,750
function.

18
00:01:44,960 --> 00:01:53,630
So create started channels within our state object that bit equal to an empty array the structure from

19
00:01:53,630 --> 00:01:58,030
state within render.

20
00:01:58,050 --> 00:02:03,980
Now we need to grab the display channels function since we're calling it.

21
00:02:04,500 --> 00:02:06,820
So we'll grab all that from channels.

22
00:02:08,370 --> 00:02:18,340
We'll change the argument there to start channels and paste it in everywhere wherever using channels

23
00:02:18,340 --> 00:02:23,760
parameter or remove the label for notifications.

24
00:02:25,340 --> 00:02:34,350
We'll add to state the active channel property equal to an empty string and also need set active channel

25
00:02:35,430 --> 00:02:37,410
in order to update that value.

26
00:02:40,350 --> 00:02:42,680
And grabbed the entire change channel function

27
00:02:45,590 --> 00:02:47,340
in order to execute it.

28
00:02:47,570 --> 00:02:52,370
And from that we can remove clear notifications as well as where we're setting the channel property

29
00:02:52,370 --> 00:02:54,350
in state since we don't have that here.

30
00:02:56,970 --> 00:02:59,610
And or import connect from Raftery Ducs

31
00:03:02,610 --> 00:03:05,170
as well said current channel and set private channel

32
00:03:07,900 --> 00:03:15,600
to allow us to switch to other public channels and update those values in our global state and connect

33
00:03:15,610 --> 00:03:19,580
at the bottom or up start with it.

34
00:03:19,800 --> 00:03:25,470
So that maps state to props now and the structure both said current channel and said private channel

35
00:03:25,480 --> 00:03:28,770
from map dispatched to props.

36
00:03:28,810 --> 00:03:34,540
Now when we have new channels added to our start component we'll be able to display them to change channels

37
00:03:34,540 --> 00:03:37,220
just like we can on our channels component.

38
00:03:38,200 --> 00:03:44,150
So an active class reach channel that we're on and display the number of channels within start.

