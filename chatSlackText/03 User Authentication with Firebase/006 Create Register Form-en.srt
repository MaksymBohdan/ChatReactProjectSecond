1
00:00:00,390 --> 00:00:05,550
We'll be using the component library semantic you react for our markup and styles within our project.

2
00:00:05,550 --> 00:00:09,250
You can find the documentation for it at re-act semantic dot com.

3
00:00:09,330 --> 00:00:13,110
We're using their usage section in order to finish setting it up.

4
00:00:13,140 --> 00:00:16,190
We've already installed the semantic you react dependency.

5
00:00:16,200 --> 00:00:22,980
Now I just need to bring in the related styles so I'll grab this import to the semantic UI stylesheet.

6
00:00:24,570 --> 00:00:32,720
Can either copy as you see it here or go to their documentation to grab it or import it within index

7
00:00:32,720 --> 00:00:41,910
not Jap's and or move the import to index at CSSA and remove the file entirely from our project files.

8
00:00:42,780 --> 00:00:43,940
And onto the save index.

9
00:00:44,010 --> 00:00:47,520
Yes we should see the rules from that style sheet applied to our app.

10
00:00:47,660 --> 00:00:53,120
You can see that the text is a bit different a bit smaller.

11
00:00:53,480 --> 00:00:59,990
And now we'll use semantic you react in order to build out our register component or import a number

12
00:00:59,990 --> 00:01:11,210
of components from me and you I react in particular will grab the grid form segment button had her message

13
00:01:12,320 --> 00:01:18,800
and icon components will begin with the grid component as the parent component grid will be used to

14
00:01:18,890 --> 00:01:24,440
structure content within our components give it the proper text align center and vertical line middle

15
00:01:24,920 --> 00:01:32,740
to center everything on the x and y axes will give it a Grid column component to put everything within

16
00:01:33,130 --> 00:01:35,430
a column in our grid.

17
00:01:35,920 --> 00:01:39,550
We'll give it a small prob with the rule of Max with set to 450.

18
00:01:39,580 --> 00:01:43,540
So the max with this column will be 450 pixels.

19
00:01:43,540 --> 00:01:48,470
We'll have our head component which will set as an H2 as H2 tags.

20
00:01:48,730 --> 00:01:55,000
Give it a proper icon a color orange text a line set to center again to center all the text within it

21
00:01:55,690 --> 00:02:00,720
we're going to include an icon within the header and the name for it will be a puzzle piece.

22
00:02:00,720 --> 00:02:06,680
You can find all the icons the available icons within the documentation to semantic UI I give it a color

23
00:02:06,730 --> 00:02:09,020
orange and the text will be register for def.

24
00:02:09,100 --> 00:02:11,320
So Deb chat will be the name of our app.

25
00:02:11,750 --> 00:02:15,940
Underneath the head will have a form component with the size of large so it can set the size for a number

26
00:02:15,940 --> 00:02:23,440
of these semantic UI components and we'll include a segment so we can put together all of the related

27
00:02:23,440 --> 00:02:29,390
content and a proper stack to stack everything on top of one another.

28
00:02:29,530 --> 00:02:31,870
And within this form we'll have a number of inputs.

29
00:02:32,230 --> 00:02:37,810
So we'll have a form input with the proper fluid to make the input the entire width of the parent component

30
00:02:38,080 --> 00:02:45,190
name of user name iconv user position the icon to the left and give it a placeholder text user name.

31
00:02:45,250 --> 00:02:52,360
And as with any input we need to add an onchange handler so offset that to the function handle change

32
00:02:53,320 --> 00:02:57,960
which will eventually use to update state according to the value typed into this input.

33
00:02:58,270 --> 00:03:05,140
But for now we'll just leave that empty as well as an empty state object will also give it a type of

34
00:03:05,140 --> 00:03:11,080
text to indicate that we're just going to be typing text for this username and put you can copy that

35
00:03:11,200 --> 00:03:14,480
entire input component pasted in right underneath.

36
00:03:14,560 --> 00:03:20,850
We'll change the name to email the icon that will have to mail the placeholder to e-mail address.

37
00:03:20,860 --> 00:03:26,650
This is where users will type in their e-mail address to register and the type of it will be email or

38
00:03:26,650 --> 00:03:30,890
set up some really basic a simple five validation.

39
00:03:31,600 --> 00:03:33,210
We'll paste it in again.

40
00:03:33,610 --> 00:03:40,980
Give it a name of password icon a block a placeholder a password and the type where it will be password.

41
00:03:41,130 --> 00:03:48,810
Now will copy this password and put and paste it underneath and this will be the password confirmation

42
00:03:48,810 --> 00:03:55,110
input her users to be able to confirm the password that they supplied given the name of password confirmation

43
00:03:55,150 --> 00:03:58,560
and icon of the placeholder password confirmation.

44
00:03:58,560 --> 00:04:07,210
Two words and we'll leave the type as password then we'll have a button that users can click onto submit

45
00:04:07,210 --> 00:04:09,320
their form.

46
00:04:09,450 --> 00:04:18,900
You know the color of orange be fluid and the size will be large underneath the form will have a message

47
00:04:18,960 --> 00:04:28,100
which will tell users or ask them if they're already a user or import the linked component from the

48
00:04:28,100 --> 00:04:31,150
pack Packers re-act Rotterdam.

49
00:04:31,160 --> 00:04:37,550
So if they're already use or if they've already registered before we'll give them a link so that they

50
00:04:37,550 --> 00:04:44,870
can log in go to the log in page so the link will be to slash log in and the text will be logged in

51
00:04:45,380 --> 00:04:48,020
can save all of that.

52
00:04:48,240 --> 00:04:49,640
If we take a look in our browser

53
00:04:52,420 --> 00:04:55,760
can see our register form although it's kind of up at the top.

54
00:04:55,760 --> 00:04:59,620
We need to bring this down to the middle of the page.

55
00:04:59,630 --> 00:05:00,920
We'll do that by going to Apter.

56
00:05:00,920 --> 00:05:07,130
CSSA and adding a rule for aist him our body and this app class that will create will give it a height

57
00:05:07,130 --> 00:05:08,370
of 100 view height.

58
00:05:08,450 --> 00:05:15,260
So take up the entire height of the browser give the background the tax code easy and the padding of

59
00:05:15,920 --> 00:05:24,320
one end around it will provide that class name that we just created the rule that we just created to

60
00:05:24,330 --> 00:05:27,000
our grid component class name of app.

61
00:05:27,960 --> 00:05:33,210
If we refresh we can see the backgrounds changed our form is centered and if we click on the log and

62
00:05:33,210 --> 00:05:35,880
link redirect to log in page.

